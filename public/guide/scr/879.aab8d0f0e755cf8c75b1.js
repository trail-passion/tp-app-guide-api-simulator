"use strict";(self.webpackChunktrail_passion_guide=self.webpackChunktrail_passion_guide||[]).push([[879],{5685:(n,t,e)=>{e.d(t,{Z:()=>h});var r=e(7537),o=e.n(r),a=e(3645),i=e.n(a),c=e(1667),u=e.n(c),s=new URL(e(312),e.b),l=i()(o()),f=u()(s);l.push([n.id,"@font-face {\r\n    font-family: fredericka;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    src: url("+f+") format('woff2');\r\n}","",{version:3,sources:["webpack://./src/tololib/font/fredericka/fredericka.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,kBAAkB;IAClB,gBAAgB;IAChB,4DAAgD;AACpD",sourcesContent:["@font-face {\r\n    font-family: fredericka;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    src: url(./fredericka-400.woff2) format('woff2');\r\n}"],sourceRoot:""}]);const h=l},8368:(n,t,e)=>{e.d(t,{Z:()=>l});var r=e(4650);const o=function(){function n(){this.actionRunning=!1}return n.prototype.exec=function(n){this.curTask?this.nxtTask=n:this.curTask=n,this.actionRunning||this.action()},n.prototype.action=function(){return n=this,t=void 0,r=function(){var n;return function(n,t){var e,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(a){return function(c){return function(a){if(e)throw new TypeError("Generator is already executing.");for(;i;)try{if(e=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(n,i)}catch(n){a=[6,n],r=0}finally{e=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,c])}}}(this,(function(t){switch(t.label){case 0:this.actionRunning=!0,t.label=1;case 1:t.trys.push([1,,8,9]),t.label=2;case 2:if(!this.curTask)return[3,7];t.label=3;case 3:return t.trys.push([3,5,,6]),[4,this.curTask()];case 4:return t.sent(),[3,6];case 5:return n=t.sent(),console.error("[UpdateTasks]",n),[3,6];case 6:return this.curTask=this.nxtTask,[3,2];case 7:return[3,9];case 8:return this.actionRunning=!1,[7];case 9:return[2]}}))},new((e=void 0)||(e=Promise))((function(o,a){function i(n){try{u(r.next(n))}catch(n){a(n)}}function c(n){try{u(r.throw(n))}catch(n){a(n)}}function u(n){var t;n.done?o(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,c)}u((r=r.apply(n,t||[])).next())}));var n,t,e,r},n}();const a={Debouncer:r.Z,sleep:function(n){return t=this,e=void 0,o=function(){return function(n,t){var e,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(a){return function(c){return function(a){if(e)throw new TypeError("Generator is already executing.");for(;i;)try{if(e=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(n,i)}catch(n){a=[6,n],r=0}finally{e=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,c])}}}(this,(function(t){return[2,new Promise((function(t){window.setTimeout(t,n)}))]}))},new((r=void 0)||(r=Promise))((function(n,a){function i(n){try{u(o.next(n))}catch(n){a(n)}}function c(n){try{u(o.throw(n))}catch(n){a(n)}}function u(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r((function(n){n(e)}))).then(i,c)}u((o=o.apply(t,e||[])).next())}));var t,e,r,o},Throttler:function(n,t){var e=0,r=0,o=function(){},a=[],i=function(){e=0,o.apply(void 0,function(n,t,e){if(e||2===arguments.length)for(var r,o=0,a=t.length;o<a;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return n.concat(r||Array.prototype.slice.call(t))}([],function(n,t){var e="function"==typeof Symbol&&n[Symbol.iterator];if(!e)return n;var r,o,a=e.call(n),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(n){o={error:n}}finally{try{r&&!r.done&&(e=a.return)&&e.call(a)}finally{if(o)throw o.error}}return i}(a),!1))};return function(){for(var c=[],u=0;u<arguments.length;u++)c[u]=arguments[u];o=n,a=c;var s=Date.now(),l=s-r;r=s,l>t?i():0===e&&(e=window.setTimeout(i,t-l))}},UpdateTasks:o};var i=function(){return i=Object.assign||function(n){for(var t,e=1,r=arguments.length;e<r;e++)for(var o in t=arguments[e])Object.prototype.hasOwnProperty.call(t,o)&&(n[o]=t[o]);return n},i.apply(this,arguments)},c=function(n,t,e,r){return new(e||(e=Promise))((function(o,a){function i(n){try{u(r.next(n))}catch(n){a(n)}}function c(n){try{u(r.throw(n))}catch(n){a(n)}}function u(n){var t;n.done?o(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(i,c)}u((r=r.apply(n,t||[])).next())}))},u=function(n,t){var e,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(a){return function(c){return function(a){if(e)throw new TypeError("Generator is already executing.");for(;i;)try{if(e=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((o=(o=i.trys).length>0&&o[o.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(n,i)}catch(n){a=[6,n],r=0}finally{e=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,c])}}},s=new Set;const l=function(){function n(n){this.name=n,this.name=n}return n.prototype.load=function(){return c(this,void 0,void 0,(function(){var t,e=this;return u(this,(function(r){return t=this.name,[2,new Promise((function(r,o){return c(e,void 0,void 0,(function(){var e;return u(this,(function(a){switch(a.label){case 0:return a.trys.push([0,2,,3]),[4,n.waitForFontToBeLoaded({name:t})];case 1:return a.sent(),r(this),[3,3];case 2:return e=a.sent(),console.error("[TFW] Font loading failed for ",t),console.error(e),o(e),[3,3];case 3:return[2]}}))}))}))]}))}))},n.prototype.use=function(){document.body.style.fontFamily=this.name},n.isFontLoaded=function(n){var t=i({size:"1rem"},n),e="".concat(t.size," '").concat(t.name,"'");try{var r=document.fonts;return r?(s.has(e)||(s.add(e),r.load(e).then((function(){}),(function(n){console.error("[TFW] Unable to preload font:",e),console.error("[TFW]",n)}))),r.check(e)):(console.warn("[TFW] This browser does not support Font load API!"),!0)}catch(n){return console.error("[TFW] Error while testing if font is loaded:",e),!1}},n.waitForFontToBeLoaded=function(t){return c(this,void 0,void 0,(function(){var e,r,o;return u(this,(function(c){switch(c.label){case 0:e=i({size:"1rem",timeout:1e3},t),r=100,o=Date.now(),c.label=1;case 1:return n.isFontLoaded(e)?[3,3]:Date.now()-o>e.timeout?(console.warn("[TFW] Timeout while waiting for font to be loaded:",e.name,e.size),[2]):[4,a.sleep(r)];case 2:return c.sent(),[3,1];case 3:return[2]}}))}))},n}()},2879:(n,t,e)=>{e.r(t),e.d(t,{default:()=>v});var r=e(8368),o=e(3379),a=e.n(o),i=e(7795),c=e.n(i),u=e(569),s=e.n(u),l=e(3565),f=e.n(l),h=e(9216),p=e.n(h),d=e(4589),y=e.n(d),b=e(5685),w={};w.styleTagTransform=y(),w.setAttributes=f(),w.insert=s().bind(null,"head"),w.domAPI=c(),w.insertStyleElement=p(),a()(b.Z,w),b.Z&&b.Z.locals&&b.Z.locals;const v=new r.Z("fredericka")},312:(n,t,e)=>{n.exports=e.p+"cc5f6964acb3501d8909.woff2"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,